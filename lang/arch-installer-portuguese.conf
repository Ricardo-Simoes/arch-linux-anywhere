### arch-anywhere-portuguese.conf
### By: Ricardo Simões (xmcorporation@gmail.com)
###
### This is the language file for Arch Linux Anywhere.
### This file is sourced at the beginning of the install based of the language you select
### If you would like to help out in translating this file into your language you can easily do so by changing the variables
###
### Enter the name of the translator "By:" and any notes you would like to include in above comments
### Please save your finished translation in the following format:
###
### arch-installer-<language-here>.conf
###
### You may send any completed translations to the developer for it to be included in the next release:
###
### deadhead3492@gmail.com
###
### First change this variable to the correct utf-8 locale for your language.
### Example: en_GB.UTF-8, pt_PT.UTF-8, ru_RU.UTF-8, ro_RO.UTF-8

LANG="pt_PT.UTF-8"

### Important: Please be sure you are using UTF-8 encoding before beginning the translation!
### Do not change the variable names for example intro_msg=
### Do not remove any occurrence of \n or \n\n this tells program to create a new line and should not be changed
### Do not remove any special characters such as *, or quotes.
### Do not edit the names of the functions example main_msg() or remove any function brackets: { }
### Do not edit any variables within the text for example: /dev/$DRIVE and: $user
###
### You may translate any full words contained between the quotes ""
### Translations begin here:

### New lines to translate will be added here. Do not remove these functions
### You may, if you wish, add lines to other functions after translation
### -------------------------------------------------------------------------------------------------

translate_this() {

clear
}

translate_this_var() {

clear
}

### -------------------------------------------------------------------------------------------------

main_msg() {

error="\Z1Erro:\Zn"

yes="Sim"

no="Não"

ok="Ok"

cancel="Cancelar"

other="Outro"

default="Padrão"

edit="Editar"

back="Recuar"

done_msg="Feito"

partition="Partição"

size="Tamanho"

add="Adicionar"

new_user="Novo Utilizador"

change_pass="Mudar-PalavraPasse"

change_sh="Mudar-Shell"

change_su="Alterar-Privilégios"

del_user="Remover-Utilizador"

install="Instalar"

mountpoint="Ponto de montagem"

custom="Personalizado"

write="Escrever-Alterações"

none="Nenhum"

select="Selecionar"

custom_msg="Insira um novo ponto de montagem personalizado: \n\n $a Será montado debaixo de Root '/'"

custom_err_msg0="\n$error O novo ponto de montagem não pode conter caracteres especiais..."

custom_err_msg1="\n$error O novo ponto de montagem não pode ser ponto de montagem root '/'"

write_confirm="Escrever alterações para o disco?"

intro_msg="Bem vindo ao instalador Arch Linux Anywhere! \n\n $a Quer iniciar o processo de instalação?"

wifi_msg0="Interface Wifi detetado, deseja ligar?"

wifi_msg1="Incapaz de ligar a rede sem fios, a sair do instalador."

connect_err0="$error Nenhuma ligação de rede, a sair do instalador."

connect_err1=$(echo -e "\n ${Red}$error ${Yellow}Tem de estar ligado à internet para instalar o Arch Linux.\n Por favor verifique a sua ligação e tente novamente.\n\n Mostrar info da ligação: \n\n    ${Green}ip add \n    ip link \n    wifi-menu ${ColorOff}\n\n")

locale_msg="Por favor selecione o seu locale:"

zone_msg0="Por favor insira o seu Fuso Horário:"

zone_msg1="Por favor insira a sua sub-zona:"

keys_msg="Selecione o seu teclado: \n\n $a Deixe como está caso não tenha a certeza"

drive_msg="Auto Particionar Drive:\n $a Selecione a drive para instalar o Arch Linux \n $a NOTE: A drive selecionada será formatada"

part_msg="Selecione o seu método de particionamento desejado: \n\n $a NOTA: Auto Particionamento irá formatar a drive selecionada \n $a Pressione cancelar para voltar à seleção de drive"

menu_msg="Retornar Ao Menu"

fs_msg="Selecione o seu sistema de ficheiros desejado: \n\n $a Padrão é EXT4"

swap_msg0="Deseja criar espaço SWAP? \n\n $a (Recomendado 512M - 1024M de espaço na drive)"

swap_msg1="Especifique o seu espaço de swap desejado: \n\n $a (Alinhe a 'M' para MiB ou 'G' para GiB):"

swap_err_msg0="$error não há espaço suficiente na drive!"

swap_err_msg1="$error o swap tem de terminar em 'M' para MiB ou 'G' para GiB"

swap_err_msg2="\n$error falha ao ligar o swap, tente formatar primeiro \n\n $a A retornar ao menu de particionamento..."

efi_msg0="Quer ativar bios UEFI? \n\n $a Pode não funcionar em alguns sistemas \n $a Ativar com cautela"

gpt_msg="Quer usar particionamento GPT? \n\n $a (Tabela de Partições GUID)"

install_type_msg="Selecione o tipo de sistema que quer instalar: \n\n $a Se não tem a certeza use 'Base' ou 'Base-devel'"

passwd_msg0="$error tem de introduzir uma palavra-passe aqui."

passwd_msg1="As palavras-passe não coincidem, por favor tente novamente..."

part_err_msg="Foi detetado um erro durante o particionamento \n\n $a A retornar ao menu de particionamento"

part_err_msg1="Erro de operações da drive. (falha de montagem/desmontagem) \n\n A retornar ao menu..."

part_err_msg2="\n$error falha ao montar dispositivo \n\n A retornar ao menu de particionamento..."

manual_part_msg="Particionamento Manual Guiado da Drive: \n $a Selecione uma drive para editar o esquema de partições \n $a Selecione uma partition para editar o ponto de montagem \n $a Selecione 'Feito' quando tiver terminado"

root_err_msg="$error partição demasiado pequena para ser partição root. \n\n $a A partição root tem de ter pelo menos 4 GiB de tamanho"

root_err_msg1="$error tem de selecionar uma partição root antes de continuar com a instalação."

write_confirm_msg="Confirme escrita de alterções para o disco:"

return_msg="\n ${Yellow}Abriu uma nova sessão de linha de comandos.\n Isto permite-lhe executar comandos personalizados do instalador.\n\n O instalador Arch Anywhere ainda está a correr em segundo plano\n Retornar a onde ficou na instalação com o comando: \n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

arch_chroot_msg="\n ${Yellow}Abriu uma nova sessão de arch-anywhere-chroot.\n Isto permite-lhe executar comandos no seu novo sistema instalado.\n\n Nota: Este não é um emulador de terminarl standard.\n Aqui os comandos são introduzidos no sistema instalado e os resultados mostrados\n histórico seta Cima/baixo e a maior parte dos comandos standard funcionam \n Para mostrar novamente esta mensagem escreva: ${Green}help \n ${Yellow}Pode instalar ou procurar pacotes com os comandos:\n\n    ${Green}pacman -S <pacote(s)-a-instalar-aqui>\n    pacman -Ss <pacote-a-procurar-aqui>\n\n ${Yellow}Pode editar ficheiros de texto com os editores nano ou vim: \n\n    ${Green}nano /path/to/file\n    vim /path/to/file\n\n ${Yellow}O instalador Arch Anywhere ainda está a correr em segundo plano.\n Retorne ao instalador com o comando:\n\n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

mirror_msg1="Por favor selecione o seu código de país:"

wifi_option_msg="Instalar utilitários wireless? Proporciona suporte wifi. \n\n $a Necessário para ligar a wifi \n $a Selecione sim se usar wifi"

wifi_util_msg="Selecione a seu utilitário de rede desejado: \n\n $a Padrão é netctl (selecione networkmanager para GUI)"

net_util_msg0="Utilitário de rede Netctl network (wifi-menu)"

net_util_msg1="Utilitário NetworkManager (nmcli)"

pppoe_msg="Incluir suporte para ligações PPPoE DSL? \n\n $a Selecione si se usar PPPoE \n $a Se não tiver certeza selecione Não"

base_msg0="Vanilla kernel"

base_msg1="Vanilla kernel com base-devel"

hardened_msg0="Hardened kernel"

hardened_msg1="Hardened kernel com base-devel"

LTS_msg0="LTS kernel (kernel de suporte longo)"

LTS_msg1="LTS kernel (kernel de suporte longo) com base-devel"

zen_msg0="Zen kernel"

zen_msg1="Zen kernel com base-devel"

os_prober_msg="Instalar os-prober? \n\n $a Requirido para multiboot \n $a Em caso de dual booting selecione sim"

grub_warn_msg0="Aviso! O sistema não será arrancável! \n\n $a Irá necessitar de configurar o carregador de arranque você mesmo \n $a Continuar sem um carregador de arranque?"

grub_warn_msg1="Depois da instalação completar escolha não reiniciar, pode escolher manter o sistema montado em /mnt permitindo-lhe entrar com arch-chroot nele e configurar o seu próprio carregador de arranque."

syslinux_warn_msg="Instalar syslinux em modo BIOS mode requer que o suporte a volumes 64bit esteja desativado para a partição de arranque.\n\n * Nota: Isto formatará a sua partição de arranque\n Continuar para desativar volume 64bit na partição de arranque?"

exit_msg="Pronto para instalar sistema \n\n $a Tem a certeza que quer sair para o menu?"

install_err_msg0="$error ficheiro de sistema root já está instalado \n\n $a A continuar para o menu."

install_err_msg1="$error nenhum sistema de ficheiros montado \n\n $a Retornar para particionamento da drive?"

multilib_msg="arquitetura de 64-bit detetada.\n\n $a Adicionar repositórios multilib a pacman.conf? \n   (Permite instalar programas 32-bit em sistemas 64-bit)"

dhcp_msg="Ativar DHCP no arranque? (Recomendado)\n\n $a Dynamic Host Control Protocol \n   (Configuração automática de endereço IP)"

host_msg="Defina o seu hostname para o sistema:\n\n $a Computador/nome de host \n $a Sem espaços ou caractéres especiais"

host_err_msg="$error hostname tem de começar com uma letra e não pode conter caractéres especiais. \n\n $a Por favor tente novamente."

user_exists_msg="Gostaria de adicionar uma nova conta de utilizador? \n\n $a Selecione 'sim' para adicionar um novo utilizador."

user_menu_msg="Adicionar ou editar contas de utilizador:\n\n            Nome de utilizador:   |   Shell:"

user_msg0="Criar uma nova conta de utilizador? \n\n $a (Recomendado) Criar um utilizador agora."

user_msg1="Definir nome de utilizador: \n\n $a Apenas letras minúsculas e números \n $a Não pode conter letras maiúsculas ou caractéres especiais"

user_err_msg="$error nome de utilizador tem de começar com letra e não pode conter caratéres especiais ou letras maiúsculas. \n\n $a Por favor tente novamente..."

user_err_msg1="$error nome de utilizador já está em uso. \n\n $a Por favor tente novamente"

user_err_msg2="$error tem de inserir um nome de utilizador \n\n $a Por favor tente novamente" 

graphics_msg="Selecione o seu controloar gráfico desejado:\nChipset detetado: $chipset  \n\n $a se não tiver certeza use xf86-video-vesa ou padrão"

desktop_cancel_msg="Tem a certeza que não quer um ambiente de trabalho? \n\n $a Após o arranque ficará apenas na linha de comandos."

nvidia_msg="Select your desired Nvidia driver: \n\n $a Cancel if none"

touchpad_msg="Would you like to install xf86-input touchpad drivers?  \n\n $a Required for laptop touchpad support."

desktop_msg="Would you like to install a desktop or window manager? \n\n $a Select 'yes' to install a desktop environment"

dm_msg="Would you like to install a display manager? \n\n $a Graphical login manager"

dm_msg1="Select your desired display manager:\n\n $a Default is lightdm"

environment_msg="Select your desired environment:\n $a Use spacebar to check/uncheck \n $a Press enter when finished"

startx_msg="Xinitrc file created. \n\n $a After login use the command 'startx' to access your desktop."

extra_msg0="Install xfce4 goodies? \n\n $a XFCE4 Extra programs"

extra_msg1="Install gnome extras? \n\n $a Gnome Extra programs"

extra_msg2="Install mate extras? \n\n $a Mate Extra programs"

extra_msg3="\n $a Install minimal plasma desktop?"

extra_msg4="Install deepin extras? \n\n $a Deepin Extra programs"

extra_msg5="Install xmonad-contrib? \n\n $a xmonad Extra programs"

extra_msg6="Install gnome group? \n\n $a gnome group programs"

software_msg0="Would you like to install some common software? \n\n $a Select yes for a list of additional software"

software_msg1="Choose your desired software: \n $a Use spacebar to check/uncheck software \n $a Press enter when finished"

software_type_msg="Select your desired software type \n\n $a Press 'install' when finished selecting software"

software_warn_msg="Are you sure you want to continue without any extra software? \n\n $a Press yes to continue without software."

software_noconfirm_msg="Are you sure you don't want any software from:"

complete_no_boot_msg="Install process complete! \n\n $a You did not configure a boot loader \n $a Return to the command line to configure?"

not_complete_msg="Install not complete, are you sure you want to reboot?"

complete_msg="Install completed successfully. \n\n $a What would you like to do now?"

part_frmt_msg="Would you like to format the selected partition? \n\n $a Select 'yes' to format partition. \n $a Select 'no' to mount without formating."

swap_frmt_msg="Would you like to format the swap space? \n\n $a Select yes to format new swap space. \n $a No to enable without formatting."

vbox_msg="VirtualBox guest install detected \n\n $a Installer will provide virtualbox-guest-utils."

vmware_msg="Vmware guest install detected \n\n $a Installer will provide xf86-video-vmware xf86-input-vmmouse open-vm-tools."

hyperv_msg="Hyper-v guest install detected \n\n $a Installer will provide xf86-video-fbdev."

vm_msg="Virtual machine guest install detected \n\n $a Installer will provide default drivers."

bluetooth_msg="Bluetooth support detected. \n\n $a Would you like to install bluez and bluez-utils? \n $a Required for bluetooth."

blueman_msg="Would you like to install blueman bluetooth manager? \n\n $a Select 'yes' to install graphical bluetooth manager."

btenable_msg="Enabling bluetooth..."

nwmanager_msg0="Enabling NetworkManager..."

nwmanager_msg1="Enabling netctl..."

vbox_enable_msg="Enabling virtualbox guest utils..."

efi_man_msg="EFI partition detected. \n\n $a Would you like to enable EFI boot?"

efi_err_msg="$error A mount point has already been created at '/boot' \n\n Please unmount and mount EFI partition as boot."

efi_err_msg1="$error Multiple EFI partitions found but not mounted. \n\n Please mount EFI partition at '/boot' and try again."

vfat_msg="EFI system partition detected. \n\n $a Vfat required to create bootable EFI partition."

loader_type_msg="Select your desired bootloader: \n\n $a Default is grub"

loader_msg="GRand Unified Bootloader"

loader_msg1="SysLinux Bootloader"

loader_msg2="Systemd Bootloader"

loader_msg3="EFISTUB Bootloader"

failed_msg="$error Failed to install packages to new root. \n\n $a Please check the file '/tmp/arch-anywhere.log' for more info."

shell_msg="Select your desired command shell \n\n * Default is bash"

nvidia_modeset_msg="Would you like to enable Nvidia DRM kernel mode setting? \n\n $a Direct Rendering Manager Kernel Module."

nvidia_340msg="Your chipset is supported by nvidia-340xx legacy drivers. \n\n $a Continue installing nvidia-340xx? graphics drivers"

nvidia_304msg="Your chipset is supported by nvidia-304xx legacy drivers. \n\n $a Continue installing nvidia-304xx graphics drivers?"

nvidia_curmsg="Your chipset is supported by the latest nvidia drivers. \n\n $a Continue installing nvidia graphics drivers?"

ucode_msg="Would you like to install intel-ucode? \n\n $a CPU microcode updates."

ucode_failed_msg="Intel ucode failed to install for unknown reason. Please check (after install): /tmp/arch-anywhere.log"

}

load_msg() {

wait_load="\n Please wait..."

connection_load="Please wait while we test your connection..."

boot_load="Creating boot partition..."

swap_load="Creating swap space..."

frmt_load="Formatting..."

mnt_load="Mounting..."

pv_load="Creating physical volumes"

lv_load="Creating logical volumes"

encrypt_load="Encrypting drive..."

mirror_load0="Retrieving new mirror list..."

mirror_load1="Please wait while ranking mirrors..."

efi_load1="Configuring efi boot..."

grub_load1="Installing grub to drive..."

grub_load2="Configuring grub..."

syslinux_load="Installing syslinux to drive..."

uefi_config_load="Please wait while configuring kernel for uEFI..."

f2fs_config_load="Please wait while configuring kernel for F2FS..."

kernel_config_load="Please wait while configuring kernel..."

encrypt_load1="Please wait while configuring kernel for encryption..."

dhcp_load="Enabling DHCP..."

dm_load="Enabling lightdm..."

pacman_load="Please wait while we update your pacman databases..."

}

part_msg() {

method0="Auto Partition Drive"

method1="Auto partition encrypted LVM"

method2="Manual Partition Drive"

}

fs_msg() {

fs0="4th extended file system"

fs1="3rd extended file system"

fs2="2nd extended file system"

fs3="B-Tree File System"

fs4="Journaled File System"

fs5="Reiser File System"

fs6="F2FS File System"

fs7="VFAT/FAT32 File System"

fs8="XFS"

}

graphics_msg() {

gr0="Auto Detect Drivers"

gr1="Vesa OpenSource Drivers"

gr2="NVIDIA Proprietary Drivers"

gr4="AMD/ATI Open Source Drivers"

gr5="Intel Open Source Drivers"

gr6="Latest stable nvidia drivers"

gr7="Legacy 340xx drivers branch"

gr8="Legaxy 304xx drivers branch"

gr9="Nvidia Open Source Drivers"

}

menu_msg() {

menu="Menu Items: \n\n $a Start a 'Command Line Session' to run custom commands\n $a Return to installer with 'arch-anywhere'"

menu0="Re-Set Locale"

menu1="Re-Set Timezone"

menu2="Re-Set Keymap"

menu3="Partition Drive"

menu4="Update Mirror list"

menu5="Install Base System"

menu11="Reboot System"

menu12="Exit Installer"

menu13="Command Line Session"

menu_err_msg3="Drive already mounted, ready to install system. \n\n $a Are you sure you want to return to partition menu?"

menu_exit_msg="System not installed yet... \n\n Are you sure you want to exit?"

aar_add_msg="Would you like to add the Arch Anywhere custom repository to your pacman.conf? \n\n * Adds custom package repo"

aar="Arch Anywhere Repository"

aar_msg="AAR Software =>"

audio="Audio"

audio_msg="Audio Software =>"

graphic="Graphics"

graphic_msg="Graphics Software =>"

internet="Internet"

internet_msg="Internet Software =>"

multimedia="Multimedia"

multimedia_msg="Multimedia Software =>"

office="Office"

office_msg="Office Software =>"

terminal="Terminal"

terminal_msg="Terminal Emulators =>"

text_editor="Text Editors"

text_editor_msg="Text Editing Software =>"

system="System"

system_msg="System Utilities =>"

games="Games"

games_msg="Linux Games =>"

reboot0="Reboot System"

reboot1="Return To Command Prompt"

reboot2="Arch-Chroot Into Installed System"

reboot3="Add New User Account"

reboot4="View Install Log"

reboot5="Install Additional Software"

reboot6="Power Off System"

}

op_msg() {

welcome_op_msg=" -| Arch Linux Anywhere |- "

connection_op_msg=" -| Check Connection |- "

locale_op_msg=" -| Set Locale |- "

zone_op_msg=" -| Set Timezone |- "

key_op_msg=" -| Set Keymap |- "

part_op_msg=" -| Partition Drive |- "

partload_op_msg=" -| Partitioning Drive |- "

manual_op_msg=" -| Partition Menu |- "

edit_op_msg=" -| Edit Partition |- "

mirror_op_msg=" -| Update Mirrorlist |- "

install_op_msg=" -| Install System |- "

config_op_msg=" -| Configure System |- "

host_op_msg=" -| Set Hostname |- "

passwd_op_msg=" -| Set Password |- "

user_op_msg=" -| Add User |- "

user_op_msg1=" -| Edit User |- "

de_op_msg=" -| Install Desktop |- "

software_op_msg=" -| Install Software |- "

complete_op_msg=" -| Install Complete |- "

menu_op_msg=" -| Main Menu |- "

}

var_msg() {

gtk3_var="Install $DE gtk3? \n\n $a (experimental version)"

drive_var="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Would you like to continue?"

drive_var1="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space: $SWAPSPACE MiB \n $a Would you like to continue?"

drive_var2="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space $SWAPSPACE MiB \n $a Boot: UEFI \n $a Would you like to continue?"

drive_var3="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Boot: UEFI \n $a Would you like to continue?"

encrypt_var0="Warning this will encrypt /dev/$DRIVE! \n\n $a Continue?"

encrypt_var1="\nPlease enter a new password for /dev/$DRIVE \n\n $a Note this password is used to unencrypt your drive at boot"

encrypt_var2="\nNew /dev/$DRIVE password again. \n\n $a Encryption password again:"

root_var="Create a new root mount point: \n $a Note: Root mount point must be created first. \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Create new root mount point?"

manual_part_var0="Partition already mounted. \n\n $a Mount point: $part_mount \n $a Partition: /dev/$part \n $a Size: $part_size\n\n Edit to create new mount point"

manual_part_var1="Would you like to unmount partition: /dev/$part and remove $part_mount mount point? \n\n $a Note will unmount all partitions mounted under"

manual_part_var2="Warning: partition: /dev/$part is set as your root filesystem, this will erase all mount point under it. \n\n $a Are you sure you want to continue?"

manual_part_var3="Would you like to edit the partition scheme now? \n\n $a Drive: /dev/$part \n $a Size: $part_size \n\n Edit partition scheme? -Don't forget to 'write' changes"

manual_new_part_var="Would you like to create a new mount point? \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Edit to create new mount point"

manual_swap_var="Would you like to remove SWAP filesystem from /dev/$part? \n\n $a Select 'yes' to remove SWAP filesystem."

mount_warn_var="Warning: disk /dev/$part contains mounted partitions. \n\n $a Would you like to unmount and edit partition scheme?"

mnt_var0="Select a new mount point for /dev/$part: \n\n $a Select 'custom' to create new mount point"

fs_err_var="$error A separate '/boot' partition must be setup when using an $FS filesystem. \n\n $a Returning to partition menu..."

install_var="Begin installing Arch Linux base system onto /dev/$DRIVE?\n\n $a Download size: $software_size \n $a Estimated install time: $down_min minutes.\n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to add: \n\nbase${base_install}"

user_edit_var="Edit user:\n $a Username: $user\n $a Login Shell: $usr_shell\n $a Sudo User: $sudo"

user_shell_var="Select a new shell for $user:\n $a Set user login shell"

user_var0="\nPlease enter a new login password for: $user \n\n $a Set $user password"

user_var1="\nRe-enter login password for: $user \n\n $a $user password again"

sudo_var="Enable sudo privilege for $user? \n\n $a Enables administrative privilege for $user."

sudo_var1="Disable sudo privilege for $user? \n\n $a Disables administrative privilege for $user."

deluser_var="Delete user: $user? \n\n $a Removes user account from system"

root_confirm_var="Confirm creating mount point? \n\n $a Mount point: '/' Root File System \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

part_confirm_var="Confirm creating mount point? \n\n $a Mount point: $mnt \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

software_confirm_var0="Add the following packages to install list? \n\n $a Number of packages: $software_int \n $a Download size: $software_size \n $a Packages to add: \n\n$software_list"

software_confirm_var1="Proceed with installing software? \n\n $a Number of packages: $software_int \n $a Total download size: $software_size \n $a Estimated install time: $down_min minutes \n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to install: \n\n$download_list"

efi_var="A mounted EFI system has been detected at $esp_part \n\n $a Would you like to enable EFI boot?"

vfat_var="The EFI system mounted at $esp_part does not contain a valid vfat filesystem. \n\n $a Would you like to format and create new vfat system?"

efi_mnt_var="The EFI partition detected at $esp_part has not been mounted. \n\n Mount EFI boot partition now?"

f2_err_var="$error You must create a separate boot partition in order to use an $FS filesystem. \n\n $a Returning to partition menu..."

}

load_var_msg() {

load_var0="Partitioning /dev/$DRIVE..."

load_var1="Please wait while creating $FS filesystem..."

install_load_var="$h\nInstalling Arch Linux to: /dev/$DRIVE \n\n $a Download size: $software_size"

software_load_var="$h\nInstalling additional software \n\n $a Download size: $software_size"

locale_load_var="Generating $LOCALE locale..."

zone_load_var="Setting timezone $ZONE..."

}

#####################################################################
### END TRANSLATION ##################################################
### DO NOT EDIT BELOW THIS LINE! ########################################
####################################################################
a="\Z2*\Zn"
h="\Z2<\Z1#\Z2>\Zn"

if "$reload" ; then
	var_msg
	load_var_msg
	translate_this_var
else
	main_msg
	load_msg
	part_msg
	fs_msg
	graphics_msg
	menu_msg
	op_msg
	translate_this
fi
